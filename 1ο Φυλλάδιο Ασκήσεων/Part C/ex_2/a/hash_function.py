# ONOMA: Ανδρεόπουλος Ευστάθιος 	ΑΜ: 4630    EMAIL: cs04630@uoi.gr
# ONOMA: Ορφανίδης Παύλος 			ΑΜ: 4134    EMAIL: cs04134@uoi.gr

class HashFunction:
    """
    Κλάση που υλοποιεί μια συνάρτηση κατακερματισμού (hash function)
    κατάλληλη για χρήση σε Bloom filters.
    """
    def __init__(self, alpha, beta, p, N):
        """
        Αρχικοποίηση της συνάρτησης κατακερματισμού.

        Παράμετροι:
        -----------
        alpha : int
            Συντελεστής πολλαπλασιασμού για τον αλγόριθμο κατακερματισμού.
        beta : int
            Σταθερά πρόσθεσης για τον αλγόριθμο κατακερματισμού.
        p : int
            Πρώτος αριθμός για modulo πράξεις (περιορίζει το εύρος των τιμών).
        N : int
            Μέγεθος του φίλτρου (για τον τελικό υπολογισμό της θέσης).
        """
        self.alpha = alpha
        self.beta = beta
        self.p = p
        self.N = N

    def hash(self, X):
        """
        Υπολογίζει το hash μιας συμβολοσειράς bits.

        Η μέθοδος χωρίζει τη συμβολοσειρά σε μπλοκ των 20 bits και χρησιμοποιεί
        έναν επαναληπτικό αλγόριθμο για τον υπολογισμό του hash.

        Παράμετροι:
        -----------
        X : str
            Η συμβολοσειρά bits που θα κατακερματιστεί.

        Επιστρέφει:
        -----------
        int
            Η τελική τιμή hash (δείκτης στο φίλτρο).
        """
        # Διάσπαση της εισόδου σε 5 μπλοκ των 20 bits και μετατροπή σε ακεραίους
        blocks = [int(X[i*20:(i+1)*20], 2) for i in range(5)]
        c = 0
        # Επαναληπτικός υπολογισμός του hash με βάση τα μπλοκ
        for Bi in blocks:
            c = (self.alpha * (Bi + c) + self.beta) % self.p
        # Περιορισμός του αποτελέσματος στο εύρος [0, N-1]
        return c % self.N
