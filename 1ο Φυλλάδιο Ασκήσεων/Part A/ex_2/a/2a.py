# ONOMA: Ανδρεόπουλος Ευστάθιος 	ΑΜ: 4630    EMAIL: cs04630@uoi.gr
# ONOMA: Ορφανίδης Παύλος 			ΑΜ: 4134    EMAIL: cs04134@uoi.gr

import numpy as np
from fractions import Fraction

def efficient_probability_calculation(max_k=1000, max_i=11):
    """
    Υπολογίζει τις πιθανότητες P(C_k = i) χρησιμοποιώντας τις δυναμικές του μετρητή Morris
    και ακριβή αριθμητική με την κλάση Fraction.
    
    Παράμετροι:
      max_k: ο μέγιστος αριθμός βημάτων (k) για τον μετρητή.
      max_i: το μέγιστο επίπεδο κατάστασης του μετρητή που εξετάζουμε (i).
    
    Επιστρέφει:
      Έναν πίνακα P όπου P[k, i] = P(C_k = i)
    """
    # Δημιουργία πίνακα 2 διαστάσεων για αποθήκευση πιθανοτήτων ως Fraction
    P = np.empty((max_k + 1, max_i + 1), dtype=object)
    
    # Αρχικοποίηση όλων των στοιχείων του πίνακα σε 0 (ως κλάσμα)
    for k in range(max_k + 1):
        for i in range(max_i + 1):
            P[k, i] = Fraction(0, 1)

    # Αρχική συνθήκη: P(0, 0) = 1 (ξεκινάμε από την κατάσταση 0 με βεβαιότητα)
    P[0, 0] = Fraction(1, 1)

    # Υπολογισμός πιθανοτήτων με δυναμικό προγραμματισμό
    for k in range(1, max_k + 1):
        # Αν ο μετρητής είναι στην κατάσταση 0, δεν μπορεί να παραμείνει εκεί από το προηγούμενο βήμα
        P[k, 0] = Fraction(0, 1)

        for i in range(1, max_i + 1):
            # Πιθανότητα να παραμείνει στην κατάσταση i: 
            # ήταν ήδη στο i στο προηγούμενο βήμα ΚΑΙ δεν αυξήθηκε
            # Πιθανότητα να ΜΗΝ αυξηθεί όταν είναι στο i: 1 - 1/2^i
            stay = P[k - 1, i] * (1 - Fraction(1, 2 ** i))
            
            # Πιθανότητα να αυξηθεί από i-1 σε i:
            # ήταν στο i-1 και αυξήθηκε με πιθανότητα 1/2^(i-1)
            inc = P[k - 1, i - 1] * Fraction(1, 2 ** (i - 1))
            
            # Συνολική πιθανότητα να βρισκόμαστε στην κατάσταση i στο βήμα k
            P[k, i] = stay + inc

    return P

# Υπολογισμός του πίνακα πιθανοτήτων για k=1000 βήματα και καταστάσεις i = 0 έως 11
P = efficient_probability_calculation(max_k=1000, max_i=11)

# Υπολογισμός της πιθανότητας ο μετρητής να βρίσκεται σε κατάσταση 8, 9, 10 ή 11 μετά από 1000 βήματα
total_probability = (
    P[1000, 8] +
    P[1000, 9] +
    P[1000, 10] +
    P[1000, 11]
)

# Μετατροπή του αποτελέσματος (Fraction) σε float για εμφάνιση σε δεκαδική μορφή
value = float(total_probability)

# Εκτύπωση του τελικού αποτελέσματος με ακρίβεια 10 δεκαδικών ψηφίων
print(f"Πιθανότητα C_1000 ∈ {{8, 9, 10, 11}}: {value:.10f}")
